
SubProceso comprobar3(M, long,muestra,j,i,resultado3 Por Referencia)
	
	si M(j,j)=M(i,i) y j<raiz(long) Entonces
		
		resultado3=Verdadero
		
		si j<raiz(long)-1  Entonces
			comprobar3(M, long,muestra,j+1,i+1 ,resultado3)
		FinSi
		
	SiNo
			
		resultado3=falso
		
	FinSi
	
	
FinSubProceso

SubProceso comprobar4(M, long,muestra,i,j,x,p,resultado3 por referencia)
	
	si M(i,j)=M(x,p) y i<raiz(long) Entonces
		
		resultado3=Verdadero
		
		si x<raiz(long)-1  Entonces
			comprobar4(M, long,muestra,i+1,j-1,x+1,p-1,resultado3)
		FinSi
		
	SiNo
		
		resultado3=falso
		
	FinSi
	
FinSubProceso




Funcion  retorno=comprobar ( M, long,muestra )
	
	Definir retorno como logico
	Definir i,j Como Entero
	retorno=Falso
	
	i=0
	j=1
	Mientras M(j,j)=M(i,i) y j<raiz(long) y retorno=Falso Hacer
		
		i=i+1
		j=j+1
		
		si j=raiz(long) Entonces
			j=j-1
			i=i-1
			retorno=Verdadero
		FinSi
		
	Fin Mientras
	
Fin Funcion



Funcion  retorno2=comprobar2 ( M, long,muestra )
	
	Definir retorno2 como logico
	Definir i,j,x,p Como Entero
	retorno2=Falso
	
	i=0
	j=raiz(long)-1
	x=i+1
	p=j-1
	Mientras M(i,j)=M(x,p) y i<raiz(long) y retorno2=falso Hacer
		
		i=i+1
		j=j-1
		x=i+1
		p=j-1
		
		si x=raiz(long) Entonces
			x=i-1
			p=j+1
			
			retorno2=Verdadero
		FinSi
		
	Fin Mientras
	
	
Fin Funcion



Funcion calculo ( M, long,muestra)
	
	Definir i,j,n Como Entero
	
	n=-1
	para i=0 hasta raiz(long)-1 Hacer
		para j=0 hasta raiz(long)-1 Hacer
			
			n=n+1
			M(i,j)=Subcadena(muestra,n,n)
			
			Escribir M(i,j) "  " Sin Saltar
		FinPara
		
		Escribir ""
		
	FinPara
	
	
Fin Funcion





Algoritmo sin_titulo
	
	Escribir "ANALIZANDO MUESTRA....."
	
	Definir muestra,M Como caracter
	Definir long,P1,i,j,x,p Como Entero
	Definir resultado3 Como Logico
	
	muestra="CCADDBACCDDDDBDBCCABBAABDBCDCADDABABCDCDDABBBCABBABBDCADCCDABDDACDBBBDBDCCDDCABCAAAACDCDCCACDCDDADAADDACBDBCCDDBCBCBBAAADDAADCAABBBCBCCBCBDBCCBBCBABADAACDBDBADCBBACDADAADABBDBDBDBDCCDDCABCCCCCADBBBBCCDACCBBBDBDAADDBCCBCCBCBDDDDCCBAAACDDBBCAABAADABBBCCCCDCCBBDCDABCDACBCBACDBCCDABDBDCDCADCCBBADDBDCCADCCDCCACCDCDBCDBBADBAADBBCAADDABCAADADAABAACCBABDADADADDBCABDCCBBAADDDCDDCBADBCACCAAADCCDDABDBACBCAAADDBADBDACDDBDCBDCCCDDCACBCCCACCCCBACBAAAAACBCBCDAADCAACBCABDDABCBCBACCADABBBABBBBBAACADDDDBABACADAAABDDDCCDCACAACACADADBABACBABDBBADCDBBDACDCAABCADDBDBDCAABDCDABDDADDCDDBCBCDADCDBBDACABCDAABBCBADDDBCBADCABACDCABBCBCBCBCADBABBDBCCCADCADDCBABBDDDBBCBCDABACDDDABCCDBACCBDBADADDDAAACBDCDCCAACBDDCDCBADACDDDDBDCBAACDADBBDBDBCCACADBAABBAADAADDDACDDCDBDDBBDAADDAACCCACDBBBBBDCDCDDDABBCBAAADACADDCDCDCBCDCACAAABCADBDBBDDACCBBDABDDBCADCCCADDCDBACBBBDAADDCDAAADBBCDADBDBCBDDCAABCCDCCDCABCAACADADAACADDBBDABAABACDACDCDBBDDCCBCBCAAACBDBDBBBDBDBBCADCBACDCCBDACBBACBCADCDBACCADCDBDCDBBACBBCDCAAAAABCCDDCDDBBCBABCBCAABDBCCACBABDCABAACBDBDBCCCCADBBCDCCCAABADBACDDBADCDCAADDDCBDDBDCDCCCCCCCDBCDDBACBBCDACDADCACBDBBCCCDCCBCBCDACBDDDACCCAADBDBBDADDCCDDDBCDABCCBACCCCCBAACCBCABAAABBCABBCACCCABCDACBCDBDACACDDCACBCBBCCADABCBBDDABADDAAABACCBDCDABCBBBBACCDABAACDCACCCBBCDDACCDBCBCBAACBBBBADBCBCDABAAAABADAAAACDACADACDBBCCABADDDCACDCAACCDABBDBDAABADDBDCCCACDADBDDDCBBCBDCADCBCDAABDDDDBBBBCDDCC"
	muestra="ACCDBBADDDCCBACABDCBDCBADBDACBBBBDAABBCCBAACCABDBDCDDABDBDADAAACBBBBCDDDCBBBDDCDABBDDABDBDBBACADCDAAADACDDDACCDCACDDABACDCCCAABDDCCACDADDBCBAACCDBCBCDDDCAACCBAADCBBBCDCBBACBDCCDDADBABCAABBACABDCAACCBDADDCAAACCDBDBBCDDDDDACBCDDADDDDCBADADBDCADDABBCDAACBCCDDDADDADADAACCACDCDDABCCCADABBACDACCAADDBCBCCDADBCCADAAABDDDAABBABCADDCCAADDCDDCDCACBADADACADDAADCBDBCDBDDACDCBCDCCABBDCBACDDACCCDADBCADCACAAABBBCADDDDBCBACDBDAAADDDACCDACBBBADACCCDCACCBACDADBCBBDADACABAACBCCADDCCCCACCCCADBCCDAADCAABBABAADDBDADDABABCCABBCDDACCADAAADBBCCDBADCADCBBDADACCDDBCAAABBBDCAAAACBAADBABBABACDDBBCBDCDCADABABBDADCBADAACDBCBDABADBCBADCACADAABCDDCABACDDBDCBCBDCAAACBDABBCACBACCCBACACDCADBDCDCDDCAACDBDCBACDBBDAABDBBCBAAADBABDBAACAAACDCDAAABABDDDBCACADCBBAADCCDABCCCBBCACCBAABDAADDDCDACDDDBCDCCBABDABACCDCDCDABAABCABBADADCBDDACDDCDDCDACDADADCACBCDABABDDCCDBCCDABACDBDAABDBDDDBADDBACABDCDDBACDDBBDDBBACBCCAACABBDADDBCAACCBCCDADDBCAADDADCCCBAAABABBBBBCABAACADBCBBABACCABCDAABADCCCCDCCADDDCCABBDDDAAADDADACBBBCBDAADACABABBAACCCADADDABDBCADDDCCDBBCCBCDCDBDDDDCACDACDBBBDDBADDACADDADDABCACDCBBADDABBBDCBBDCDAABADDDDDBCACCCCAAACBCBCDBACCCDACCCDBCBDCBADBCDDACCDBDBDBCAAACDDCBAABDBCAADCADDBABABDCBCBCBBBCACBCADDCAAAAAACBBACBBCCACBDCDDDDADCAAACBABDDBDADBAADCBABDDBCDBABDBAADDDBACBBBCCCDBDDBDDAADBBADADDDCBCACBABCDBBABAADABCABCDBACBBBCDBADADDBDCBDABBDDDCDDCCACDCBDCADABAABCDCAACCDDBADBDBCDACAAACBCADCCCBAC"
	muestra="CDDACCACCACAAABC"
	muestra="BCBBABBACBBBBCBB"
	muestra="BCAADCCBABCCBABB"
	
	muestra=Minusculas(muestra)
	
	long=Longitud(muestra)
	
	Dimension M(raiz(long),raiz(long))
	
	
	
	si raiz(long)=3 o raiz(long)=4 o raiz(long)=37 Entonces
		
		calculo(M, long,muestra)
		
//		escribir comprobar(M, long,muestra)
//		
//		escribir comprobar2( M, long,muestra )
//		
//		si comprobar(M, long,muestra)=Verdadero y comprobar2( M, long,muestra )= Verdadero Entonces
//			
//			Escribir "Se ha detectado el gen Z!!"
//		SiNo
//			Escribir "Que pena!"
//			
		//		FinSi
		
		
		// Con recursividad
		i=0
		j=1
		comprobar3(M, long,muestra,j,i,resultado3)
		Escribir resultado3
		
		i=0
		j=raiz(long)-1
		x=i+1 //1
		p=j-1  //2
		comprobar4(M, long,muestra,i,j,x,p,resultado3)
		escribir resultado3
		
		
		
		
		
	SiNo
		Escribir "La muestra no es valida"
	FinSi
	
	
FinAlgoritmo

